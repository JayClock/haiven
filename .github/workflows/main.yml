name: Team AI 
run-name: Test and Build

env:
  REGISTRY: "ghcr.io"
  
on:
  push:
    paths-ignore:
      - '.vscode/**'

jobs:

  BuildBase:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    outputs:
      image_digest: ${{ steps.kaniko-base.outputs.digest }}
    steps:
      - uses: 'actions/checkout@v4.1.1'
        # with:
        #   lfs: true
      # - name: Set up Python
      #   id: setup_python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.10'
      # - name: Cache App virtualenv
      #   uses: actions/cache@v3
      #   with:
      #     key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
      #     path: app/.venv
      # - name: Install App dependencies
      #   run: |
      #     cd app && \
      #     python -m venv .venv && \
      #     source .venv/bin/activate && \
      #     python -m pip install -r requirements.txt && \
      #     echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH && \
      #     echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      # - name: Run App unit tests
      #   run: |
      #     cd app && \
      #     source .venv/bin/activate && \
      #     pytest -m 'not integration'
      # - name: Cache Cli virtualenv
      #   uses: actions/cache@v3
      #   with:
      #     key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
      #     path: cli/.venv
      # - name: Install Cli dependencies
      #   run: |
      #     cd cli && \
      #     python -m venv .venv && \
      #     source .venv/bin/activate && \
      #     python -m pip install -r requirements.txt && \
      #     echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH && \
      #     echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      # - name: Run Cli unit tests
      #   run: |
      #     cd cli && \
      #     source .venv/bin/activate && \
      #     pytest -m 'not integration'

      - uses: docker/metadata-action@v5
        # if: steps.changes.outputs.build == 'true'
        id: metadata
        # auto generate image tags image based on branch name
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Kaniko build base image
        # if: steps.changes.outputs.build == 'true'
        id: 'kaniko-base'
        uses: int128/kaniko-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ${{ env.REGISTRY }}/${{ github.repository }}/cache
          push: true
          context: ./app
