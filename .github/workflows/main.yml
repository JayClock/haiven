name: Team AI 
run-name: Test and Build

env:
  REGISTRY: "ghcr.io"
  
on:
  push:
    paths-ignore:
      - '.vscode/**'
  workflow_dispatch: # allows for manual invocation

jobs:

  Test:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
    steps:
      - uses: 'actions/checkout@v4.1.1'
      - name: Set up Python
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Cache App virtualenv
        uses: actions/cache@v3
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
          path: app/.venv
      - name: Install App dependencies
        run: |
          cd app && \
          python -m venv .venv && \
          source .venv/bin/activate && \
          python -m pip install -r requirements.txt && \
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH && \
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      - name: Run App unit tests
        run: |
          cd app && \
          source .venv/bin/activate && \
          pytest -m 'not integration'
      - name: Cache Cli virtualenv
        uses: actions/cache@v3
        with:
          key: venv-${{ runner.os }}-${{ steps.setup_python.outputs.python-version}}-${{ hashFiles('requirements.txt') }}
          path: cli/.venv
      - name: Install Cli dependencies
        run: |
          cd cli && \
          python -m venv .venv && \
          source .venv/bin/activate && \
          python -m pip install -r requirements.txt && \
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH && \
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV
      - name: Run Cli unit tests
        run: |
          cd cli && \
          source .venv/bin/activate && \
          pytest -m 'not integration'

  Build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [Test]
    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'write'
    outputs:
      image_digest: ${{ steps.kaniko-base.outputs.digest }}
    steps:
      - uses: 'actions/checkout@v4.1.1'

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}

      - name: Kaniko build base image
        id: 'kaniko-base'
        uses: int128/kaniko-action@v1
        with:
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache: true
          cache-repository: ${{ env.REGISTRY }}/${{ github.repository }}/cache
          push: true
          context: ./app

      - name: Notify community knowledge pack
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.KP_WEBHOOK_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/birgitta410/team-ai-community-knowledge-pack/dispatches \
            -d '{"event_type":"team-ai-base-new","client_payload":{}}'
